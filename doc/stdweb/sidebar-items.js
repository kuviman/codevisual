initSidebarItems({"enum":[["Value","A type representing a JavaScript value."]],"fn":[["event_loop","Runs Emscripten's event loop."],["initialize","Initializes the library."]],"macro":[["console","Calls methods on the JavaScript `console` object."],["js","Embeds JavaScript code into your Rust program."],["js_deserializable","A macro which makes it possible to convert an instance of a given type implementing Serde's `Deserialize` into a Value using TryInto."],["js_serializable","A macro which makes it possible to pass an instance of a given type implementing Serde's `Serialize` into the js! macro."]],"mod":[["serde","A module with serde-related APIs."],["traits","A module containing reexports of all of our interface traits."],["unstable","A module containing stable counterparts to currently unstable Rust features."],["web","A module with bindings to the Web APIs."]],"struct":[["Array","A type representing a JavaScript array."],["DiscardOnDrop","If you have a value which implements `Discard`, you can use `DiscardOnDrop::new(value)` which will wrap the value. When the wrapper is dropped it will automatically call `value.discard()`."],["Null","A unit type representing JavaScript's `null`."],["Number","A type representing a JavaScript number."],["Object","A type representing a JavaScript object."],["Once","A wrapper for passing `FnOnce` callbacks into the `js!` macro."],["Reference","A type representing a reference to a JavaScript value."],["Symbol","A type representing a JavaScript `Symbol`."],["Undefined","A unit type representing JavaScript's `undefined`."],["UnsafeTypedArray","A wrapper type for exposing raw Rust slices as `TypedArray`s at zero cost without copying."]],"trait":[["InstanceOf","A trait to check whenever a given Reference is of a certain type."],["JsSerialize","A trait for types which can be serialized through the `js!` macro."],["ReferenceType","A trait for types which wrap a reference to a JavaScript object."]]});